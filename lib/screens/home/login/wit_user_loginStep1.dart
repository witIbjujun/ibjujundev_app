import 'package:flutter/material.dart';
import 'package:witibju/screens/home/login/wit_user_loginStep2.dart';
import '../wit_home_theme.dart';

class WitUserLoginStep1 extends StatefulWidget {
  final String nickName; // üîπ Ï†ÑÎã¨Î∞õÏùÄ ÎãâÎÑ§ÏûÑ

  const WitUserLoginStep1(this.nickName, {Key? key}) : super(key: key);

  @override
  _WitUserLoginStep1State createState() => _WitUserLoginStep1State();
}

class _WitUserLoginStep1State extends State<WitUserLoginStep1> {
  bool _allChecked = false;
  final Map<String, bool> _agreementList = {
    "Îßå 14ÏÑ∏ Ïù¥ÏÉÅÏûÖÎãàÎã§.(ÌïÑÏàò)": false,
    "ÏÑúÎπÑÏä§ Ïù¥Ïö©ÏïΩÍ¥Ä ÎèôÏùò(ÌïÑÏàò)": false,
    "Ï†ÑÏûêÍ∏àÏúµÍ±∞Îûò Í∏∞Î≥∏ÏïΩÍ¥Ä ÎèôÏùò(ÌïÑÏàò)": false,
    "Í∞úÏù∏Ï†ïÎ≥¥ ÏàòÏßë Î∞è Ïù¥Ïö© ÎèôÏùò(ÌïÑÏàò)": false,
    "ÏúÑÏπòÏ†ïÎ≥¥ Ïù¥Ïö©ÎèôÏùò(ÌïÑÏàò)": false,
    "Í∞úÏù∏Ï†ïÎ≥¥ Ï†ú3Ïûê Ï†úÍ≥µ ÎèôÏùò(ÌïÑÏàò)": false,
    "SMS Ïù¥Î≤§Ìä∏Îì± ÎßàÏºÄÌåÖ ÏàòÏã† ÎèôÏùò(ÏÑ†ÌÉù)": false,
    "Ïù¥Î©îÏùº Ïù¥Î≤§Ìä∏Îì± ÎßàÏºÄÌåÖ ÏàòÏã† ÎèôÏùò(ÏÑ†ÌÉù)": false,
  };

  /// üîπ Î™®Îëê ÎèôÏùò Ï≤¥ÌÅ¨ Ïãú Î™®Îì† Ìï≠Î™© ÏóÖÎç∞Ïù¥Ìä∏
  void _toggleAll(bool? value) {
    setState(() {
      _allChecked = value ?? false;
      _agreementList.updateAll((key, value) => _allChecked);
    });
  }

  /// üîπ Í∞úÎ≥Ñ Ï≤¥ÌÅ¨ Ïãú ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏
  void _toggleSingle(String key, bool? value) {
    setState(() {
      _agreementList[key] = value ?? false;
      _allChecked = _agreementList.values.every((checked) => checked);
    });
  }

  /// üîπ Î™®Îì† ÌïÑÏàò Ìï≠Î™©Ïù¥ Ï≤¥ÌÅ¨ÎêòÏóàÎäîÏßÄ ÌôïÏù∏
  bool _isAllRequiredChecked() {
    return _agreementList.entries
        .where((entry) => entry.key.contains('(ÌïÑÏàò)'))
        .every((entry) => entry.value == true);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white, // ‚úÖ Í∏∞Î≥∏ Î∞∞Í≤ΩÏùÑ Ìù∞ÏÉâÏúºÎ°ú ÏÑ§Ï†ï
      appBar: AppBar(
        title: const Text(
          "ÏïΩÍ¥ÄÏóê ÎèôÏùòÌï¥Ï£ºÏÑ∏Ïöî.",
          style: TextStyle(
            fontWeight: FontWeight.bold,
            color: Colors.white, // ‚úÖ Í∏ÄÏî® ÏÉâÏÉÅ Ìù∞ÏÉâÏúºÎ°ú ÏÑ§Ï†ï
          ),
        ),
        backgroundColor: Colors.black,
        elevation: 1,
        leading: IconButton(
          icon: const Icon(Icons.arrow_back, color: Colors.white),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
      ),
      body: Column(
        children: [
          const SizedBox(height: 20),

          // ‚úÖ "ÏïÑÎûò ÏïΩÍ¥ÄÏóê Î™®Îëê ÎèôÏùòÌï©ÎãàÎã§." ÏòÅÏó≠
          Container(
            color: Colors.black, // ‚úÖ Î∞∞Í≤ΩÏùÑ Í≤ÄÏ†ïÏÉâÏúºÎ°ú ÏÑ§Ï†ï
            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
            child: Row(
              children: [
                const Expanded(
                  child: Text(
                    "ÏïÑÎûò ÏïΩÍ¥ÄÏóê Î™®Îëê ÎèôÏùòÌï©ÎãàÎã§.",
                    style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
                  ),
                ),
                Checkbox(
                  value: _allChecked,
                  onChanged: _toggleAll,
                  activeColor: WitHomeTheme.wit_lightGreen, // ‚úÖ Ï≤¥ÌÅ¨ Ïãú ÎÖπÏÉâ
                  checkColor: Colors.white, // ‚úÖ Ï≤¥ÌÅ¨ ÌëúÏãú Ìù∞ÏÉâ
                  materialTapTargetSize: MaterialTapTargetSize.shrinkWrap, // ‚úÖ Í∞ÑÍ≤© Ï§ÑÏù¥Í∏∞
                ),
              ],
            ),
          ),

          const SizedBox(height: 10),

          // ‚úÖ ÏïΩÍ¥Ä Î™©Î°ù
          Expanded(
            child: ListView(
              children: _agreementList.keys.map((key) {
                return ListTile(
                  contentPadding: const EdgeInsets.symmetric(horizontal: 16.0),
                  title: Text(
                    key,
                    style: WitHomeTheme.title.copyWith(fontSize: 16), // ‚úÖ Ìè∞Ìä∏ Ïä§ÌÉÄÏùº Ï†ÅÏö©
                  ),
                  trailing: SizedBox(
                    width: 40, // ‚úÖ Í≥µÍ∞ÑÏùÑ Ï†úÌïúÌï®ÏúºÎ°úÏç® Ïò§Î•ò Ìï¥Í≤∞
                    child: Checkbox(
                      value: _agreementList[key],
                      onChanged: (value) {
                        _toggleSingle(key, value);
                      },
                      activeColor: WitHomeTheme.wit_lightGreen, // ‚úÖ Ï≤¥ÌÅ¨ Ïãú ÎÖπÏÉâ
                      checkColor: Colors.white, // ‚úÖ Ï≤¥ÌÅ¨ ÌëúÏãú Ìù∞ÏÉâ
                      materialTapTargetSize: MaterialTapTargetSize.shrinkWrap, // ‚úÖ Í∞ÑÍ≤© Ï§ÑÏù¥Í∏∞
                    ),
                  ),
                );
              }).toList(),
            ),
          ),

          // ‚úÖ Îã§Ïùå Î≤ÑÌäº
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 16),
            child: ElevatedButton(
              style: ElevatedButton.styleFrom(
                minimumSize: const Size(double.infinity, 50),
                backgroundColor:
                _isAllRequiredChecked() ? WitHomeTheme.wit_lightGreen : Colors.grey[400],
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(8),
                ),
              ),
              onPressed: _isAllRequiredChecked()
                  ? () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => WitUserLoginStep2(widget.nickName)),
                );
              }
                  : null,
              child: const Text(
                "Îã§Ïùå",
                style: TextStyle(color: Colors.white, fontSize: 16),
              ),
            ),
          ),
        ],
      ),
    );
  }
}
